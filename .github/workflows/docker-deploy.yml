name: Docker Image CI - SysSoftIntegra FrontEnd

on:
  push:
    branches: 
      - "master"
      - "staging"
      - "test"
      - "development"

jobs:
    build-nextjs:
      name: Build Front-End (React Js)
      runs-on: ubuntu-latest
      strategy:
        matrix:
          include:
            - environment: leatsac
              service: leatsac-services
            - environment: ferreteria-rym
              service: ferreteria-rym-services
            - environment: importmuneli
              service: importmuneli-services
            - environment: supermarketya
              service: supermarketya-services
            - environment: dracoly
              service: dracoly-services
            - environment: main
              service: main-services
            - environment: desarrollo
              service: sysintegra-services
    
      environment: ${{ matrix.environment }}

      steps:
        - name: Checkout c贸digo
          uses: actions/checkout@v3

        - name: Crear archivo .env
          run: |
            cat > .env <<EOL
            VITE_APP_BACK_END="${{secrets.VITE_APP_BACK_END}}"
            VITE_APP_APIS_PERU="${{secrets.VITE_APP_APIS_PERU}}"
            VITE_APP_ENV="${{secrets.VITE_APP_ENV}}"
            VITE_APP_VERSION="${{secrets.VITE_APP_VERSION}}"
            EOL

        - name: Construyendo contenedor ReactJs
          run: docker compose -f docker-compose.build.yml build ${{ matrix.service }}

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v2
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}

        - name: Login to Amazon ECR
          uses: aws-actions/amazon-ecr-login@v1 
        
        - name: Tag front-end image
          run: docker tag ${{ matrix.environment }}-frontend ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/syssoftintegra/front-end:${{ matrix.environment }}-latest

        - name: Push front-end image to ECR
          run: docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/syssoftintegra/front-end:${{ matrix.environment }}-latest


  # build-and-deploy-master:
  #   if: github.ref == 'refs/heads/master'
  #   runs-on: webs
  #   strategy:
  #     matrix:
  #       include:
  #         - environment: leatsac
  #           service: leatsac-services
  #         - environment: ferreteria-rym
  #           service: ferreteria-rym-services
  #         - environment: importmuneli
  #           service: importmuneli-services
  #         - environment: supermarketya
  #           service: supermarketya-services
  #         - environment: dracoly
  #           service: dracoly-services
  #         - environment: main
  #           service: main-services
    
  #   environment: ${{ matrix.environment }}
      
  #   env:  
  #     VITE_APP_BACK_END: ${{ secrets.VITE_APP_BACK_END }}
  #     VITE_APP_APIS_PERU: ${{ secrets.VITE_APP_APIS_PERU }}
  #     VITE_APP_ENV: ${{ vars.VITE_APP_ENV }}
  #     VITE_APP_VERSION: ${{ vars.VITE_APP_VERSION }}
    
  #   steps:
  #     - name: Checkout c贸digo
  #       uses: actions/checkout@v3

  #     - name: Crear archivo .env
  #       run: |
  #         cat > .env <<EOL
  #         VITE_APP_BACK_END="${{env.VITE_APP_BACK_END}}"
  #         VITE_APP_APIS_PERU="${{env.VITE_APP_APIS_PERU}}"
  #         VITE_APP_ENV="${{env.VITE_APP_ENV}}"
  #         VITE_APP_VERSION="${{env.VITE_APP_VERSION}}"
  #         EOL
      
  #     - name: Creando y ejecutando contenedor
  #       run: docker compose -f docker-compose.yml up --build ${{ matrix.service }} -d

  # build-and-deploy-staging:
  #   if: github.ref == 'refs/heads/staging'
  #   runs-on: webs
  #   strategy:
  #     matrix:
  #       include:
  #         - environment: dracoly
  #           service: dracoly-services
  #         - environment: main
  #           service: main-services
    
  #   environment: ${{ matrix.environment }}
      
  #   env:  
  #     VITE_APP_BACK_END: ${{ secrets.VITE_APP_BACK_END }}
  #     VITE_APP_APIS_PERU: ${{ secrets.VITE_APP_APIS_PERU }}
  #     VITE_APP_ENV: ${{ vars.VITE_APP_ENV }}
  #     VITE_APP_VERSION: ${{ vars.VITE_APP_VERSION }}
    
  #   steps:
  #     - name: Checkout c贸digo
  #       uses: actions/checkout@v3

  #     - name: Crear archivo .env
  #       run: |
  #         cat > .env <<EOL
  #         VITE_APP_BACK_END="${{env.VITE_APP_BACK_END}}"
  #         VITE_APP_APIS_PERU="${{env.VITE_APP_APIS_PERU}}"
  #         VITE_APP_ENV="${{env.VITE_APP_ENV}}"
  #         VITE_APP_VERSION="${{env.VITE_APP_VERSION}}"
  #         EOL
      
  #     - name: Creando y ejecutando contenedor
  #       run: docker compose -f docker-compose.yml up --build ${{ matrix.service }} -d

  # build-and-deploy-test:
  #   if: github.ref == 'refs/heads/test'
  #   runs-on: webs
  #   strategy:
  #     matrix:
  #       include:
  #         - environment: desarrollo
  #           service: sysintegra-services
    
  #   environment: ${{ matrix.environment }}
      
  #   env:  
  #     VITE_APP_BACK_END: ${{ secrets.VITE_APP_BACK_END }}
  #     VITE_APP_APIS_PERU: ${{ secrets.VITE_APP_APIS_PERU }}
  #     VITE_APP_ENV: ${{ vars.VITE_APP_ENV }}
  #     VITE_APP_VERSION: ${{ vars.VITE_APP_VERSION }}
    
  #   steps:
  #     - name: Checkout c贸digo
  #       uses: actions/checkout@v3

  #     - name: Crear archivo .env
  #       run: |
  #         cat > .env <<EOL
  #         VITE_APP_BACK_END="${{env.VITE_APP_BACK_END}}"
  #         VITE_APP_APIS_PERU="${{env.VITE_APP_APIS_PERU}}"
  #         VITE_APP_ENV="${{env.VITE_APP_ENV}}"
  #         VITE_APP_VERSION="${{env.VITE_APP_VERSION}}"
  #         EOL
      
  #     - name: Creando y ejecutando contenedor
  #       run: docker compose -f docker-compose.yml up --build ${{ matrix.service }} -d